name: Run UnitTests
on:
  pull_request:
    branches:
      - dev
    paths-ignore:
      - 'json_database/version.py'
      - 'examples/**'
      - '.github/**'
      - '.gitignore'
      - 'LICENSE'
      - 'CHANGELOG.md'
      - 'MANIFEST.in'
      - 'readme.md'
      - 'scripts/**'
  push:
    branches:
      - master
    paths-ignore:
      - 'json_database/version.py'
      - 'requirements/**'
      - 'examples/**'
      - '.github/**'
      - '.gitignore'
      - 'LICENSE'
      - 'CHANGELOG.md'
      - 'MANIFEST.in'
      - 'readme.md'
      - 'scripts/**'
  workflow_dispatch:

jobs:
  unit_tests:
    strategy:
      max-parallel: 3
      matrix:
        python-version: [3.9]
    runs-on: ubuntu-latest
    timeout-minutes: 35
    steps:
      - uses: actions/checkout@v2
      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt install python3-dev
          python -m pip install build wheel uv
      - name: Install test dependencies
        run: |
          uv pip install --system -r test/requirements.txt
      - name: Install core repo
        run: |
          uv pip install --system -e .
      - name: Run unittests
        run: |
          pytest --cov=json_database --cov-report xml test
      - name: Upload coverage
        env:
          CODECOV_TOKEN: ${{secrets.CODECOV_TOKEN}}
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./coverage/reports/
          fail_ci_if_error: true
          files: ./coverage.xml,!./cache
          flags: unittests
          name: codecov-unittests
          verbose: true
